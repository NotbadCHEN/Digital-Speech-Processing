import wave
import matplotlib.pyplot as plt
import numpy as np

plt.rcParams['font.sans-serif']=['SimHei']      #rc配置参数来自定义图形的各种默认属性可显示中文标题
plt.rcParams['axes.unicode_minus']=False

def waveread(filepath):
    file=wave.open('data/aa.wav','rb')   #打开音频文件
    params=file.getparams()         #获取音频文件信息
    print('--------音频文件参数--------')
    print(params)

    nchannels,sampwidth,framerate,nframes=params[:4]    #从音频参数中取出各种参数
    Totaltime=nframes/framerate               #计算音频信号的总时间长度
    print('--------音频时长（秒）-------')
    print(Totaltime)

           ###将音频数据整理为时间序列####
    strdata=file.readframes(nframes)            #获得音频文件的帧数据
    wavedata=np.frombuffer(strdata,dtype=np.short)      #将帧数据转换为一维short类型数组
    wavedata=wavedata*1.0/(max(abs(wavedata)))           #音频数据幅值归一化
    wavedata=np.reshape(wavedata,[nframes,nchannels])
    wavedata=wavedata[:,0]  #取左声道波形
    time=np.arange(0,nframes)*(1.0/framerate)   #计算出每个数据点的时间序列，用于绘图
    file.close()     #关闭文件
    return [time,wavedata]

#快速傅里叶变换FFT（x，nfft）函数
def FFT(x,nfft):
    y=np.fft.fft(x,nfft)   #FFT计算
    y=abs(y)   #取绝对值
    freq=[i*framerate/nfft for i in range(nfft)]   #计算频谱数据对应的频率点
    return (freq,y)

#主程序
scr="data/aa.wav"   #文件地址
[time,wavedata]=waveread(scr) #调用waveread()读取音频文件参数
inc=330 #设置帧移
wlen=800 #设置帧长
framerate=4410 #设置采样率
nfft=4096 #设置FFT点数

#绘制出语音波形及对应的频谱图
plt.figure(1)
plt.subplot(211)
plt.plot(time,wavedata)
plt.title("语音波形图(有音段)")
plt.xlabel("时间(秒)")
plt.ylabel("幅度")

#利用specgram()函数计算语谱图并绘制
plt.subplot(212)
plt.specgram(wavedata,NFFT=nfft,Fs=framerate,noverlap=wlen-nfft)   #绘制语谱图 specgram(x1(语音向量，注意单声道双声道问题),N(fft个数),fs(s 采样频率),window(帧长),overlap(帧移))
plt.colorbar()
plt.title("语谱图")
plt.xlabel("时间(秒)")
plt.ylabel("频率(Hz)")

plt.show()